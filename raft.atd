(* http://raftuserstudy.s3-website-us-west-1.amazonaws.com/study/raft.pdf *)

type log = {
    index: int;
    term: int;
    command: string;
}

type vote_request = {
    candidate_id: int;
    term: int;
    last_long_index: int;
    last_long_term: int;
}

type vote_response = {
    term: int;
    vote_granted: bool;
}

type append_entries_request = {
    term: int;
    leader_id: int;
    prev_log_index: int;
    prev_log_term: int;
    entries: log list;
    commit_index: int;
}

type append_entries_response = {
    term: int;
    success: bool;
}

type raft_mode = [ Leader | Follower | Candidate]

type raft_event = [Init|VoteRPC|AppendEntries|Timeout]

type raft_persistent_state =
  {current_term: int; voted_for: int; entries: log list}

type candidate_state = {
}

type follower_state = {
}

type mode_state [candidate_state|follower_state]
type raft_state = {mode: raft_mode; per_state: raft_persistent_state;  }
